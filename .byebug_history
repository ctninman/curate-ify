c
user_spotify_url
user_spotify_username
user_spotify_profile_image
user_spotify_expires_in
user_spotify_refresh_token
user_spotify_access_token
c
user_spotify_access_token
c
user_params
c
user_spotify_access_token
c
spotify_user
c
user_params['id']
auth_params['id']
user_params
c
user_params
user_response
c
auth_params['external_urls']['spotify']
auth_params['id']
auth_params['images'][0]['url']
auth_params['expires_in']
auth_params['refresh_token']
auth_params['access_token']
spotify_user
c
user_params
c
user_response
c
header
c
auth_params
c
auth_response
c
auth_response
body
c
header
c
auth_params
c
auth_response
c
auth_response
body
c
spotify_uri
c
new_user
c
new_user
c
header
c
auth_params
user_params
c
body
c
new_relationship
c
new_relationship
c
params
continue
exit
c
updated_queue
c
updated_queue
c
user_id
c
queue_album
c
matching_users
c
match_array
matching_users
c
match_array
c
match_array
User.matched_all(match_array)
c
match_array
c
match_array
matching_albums_array
c
params[:matching_albums_array]
c
exit
is_true
exit
is_true[0]
is_true.first
is_true
is_true.length
is_true
c
found_lists
c
found_lists
c
found_lists
c
found_lists
c
found_lists
c
found_lists
c
params
found_lists
c
params
c
params
c
user_artists
c
incoming_album
c
incoming_album
c
exit
incoming_artist
artist_id
exit
user_artist
incoming_artist
artist_id
c
artist_id
exit
chosen_album
exit
list_id_for_update
exit
list_album
c
select_list
current_list_albums
c
current_list_albums
c
current_list_albums
c
current_list_albums
c
select_list
c
list_addition
exit
select_list
exit
select_list
c
select_list
current_list_albums
exit
current_list_albums
list
exit
list_array
exit
eixt
params
exit
this_album
exit
this_album
exit
new_list_albums
proper_list_albums
exit
params
exit
JSON.parse(meridian)
meridian
exit
JSON.parse(meridian)
meridian
exit
eit
new_releases
exit
new_releases
access_token
nickname
my_link
exit
user_params["external_urls"]["spotify"]
JSON.parse(user_response.body)
user_response = RestClient.get('https://api.spotify.com/v1/me', header)
JSON.parse(user_response.body)
auth_params['expires_in']
auth_params['refresh_token']
auth_params['access_token']
auth_params
JSON.parse(user_response.body)
new_releases=_
user_response = RestClient.get('https://api.spotify.com/v1/browse/new-releases', header)
user_response = RestClient.get('https://api.spotify.com/v1/albums', header)
user_response = RestClient.get('https://api.spotify.com/albums', header)
user_response = RestClient.get('https://api.spotify.com/albums/4aawyAB9vmqN3uQ7FjRGTy', header)
auth_params['refresh_token']
auth_params['access_token']
user_params["external_urls"]["spotify"]
user_params["id"]
user_params = JSON.parse(user_response.body)
user_response
user_response = RestClient.get('https://api.spotify.com/v1/me', header)
user_response = RestClient.get('https://api.spotify.com/v1/me", header)
header = {Authorization: "Bearer #{auth_params["access_token"]}"}
header = {Authorization: "Bearer #{auth_params["access_token]}"}
header
header = {Authorization: "Bearer #{auth_params["access_token]}"}
auth_params
exit
code_for_token
params[:code]
params [:code]
params: code
params.code
params
exit
code_for_token
exit
code_for_token
exit
response.body
response
exit
response
exit
response
response.body.access_token
response.access_token
response.body
response
json_response
exit
split_url
exit
eixt
split_url
exit
